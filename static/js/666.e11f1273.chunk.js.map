{"version":3,"file":"static/js/666.e11f1273.chunk.js","mappings":"mNAGaA,EAAUC,EAAAA,GAAAA,QAAH,+IAQPC,EAAYD,EAAAA,GAAAA,GAAH,yJASTE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,wP,6BCiCvB,EAhDkB,WAChB,OAAwCI,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAqB,WACzB,IAAMC,EAAYC,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,GACnER,EAAgBI,GAChBF,GAAa,EACd,GAEDO,EAAAA,EAAAA,YAAU,WACRN,GACD,GAAE,IAEH,IAAMO,EAAsB,SAAAC,GAC1B,IACMC,GADYP,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,IAChCK,QAAO,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,EAAII,EAAnB,IAC7CR,aAAaS,QAAQ,YAAaX,KAAKY,UAAUL,IACjDT,GACD,EAID,OAFAe,QAAQC,IAAIpB,GAERE,GAAqC,IAAxBF,EAAaqB,QAE1B,UAAC3B,EAAD,WACGQ,GACC,SAACoB,EAAA,EAAD,KAEA,6GAEApB,IAAa,SAACL,EAAD,CAAY0B,GAAG,WAAf,iCAMnB,UAAC7B,EAAD,YACE,SAACE,EAAD,UACGI,EAAawB,KAAI,SAACZ,EAAKa,GAAN,OAChB,SAACC,EAAA,EAAD,CAAyBC,QAASf,EAAKD,oBAAqBA,GAA1Cc,EADF,OAIlBvB,IAAa,SAACL,EAAD,CAAY0B,GAAG,WAAf,+BAGpB,ECjDc,SAASK,IACtB,OAAO,SAAC,EAAD,GACR,C,wDCHM,IAkBIC,EAAS,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAAClB,EAAImB,GAWvD,OAREnB,IAFFmB,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["components/Favorites/Favorites.styled.jsx","components/Favorites/Favorites.jsx","pages/FavoritesPage.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Section = styled.section`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  padding-top: 50px;\n  padding-left: 220px;\n`;\n\nexport const CatalogUl = styled.ul`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  column-gap: 29px;\n  row-gap: 50px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 100px auto 150px auto;\n  color: #3470ff;\n\n  transition: color 300ms ease;\n\n  &:hover,\n  &:focus,\n  &:active {\n    color: #0b44cd;\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { Section, CatalogUl, StyledLink } from \"./Favorites.styled\";\nimport CatalogItem from \"../Catalog/CatalogItem\";\nimport Spinner from \"components/Spinner\";\n\nconst Favorites = () => {\n  const [favoriteCars, setFavoriteCars] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const updateFavoriteCars = () => {\n    const favorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\n    setFavoriteCars(favorites);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    updateFavoriteCars();\n  }, []);\n\n  const removeFromFavorites = car => {\n    const favorites = JSON.parse(localStorage.getItem(\"favorites\")) || [];\n    const updatedFavorites = favorites.filter(fav => fav.id !== car.id);\n    localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\n    updateFavoriteCars();\n  };\n\n  console.log(favoriteCars);\n\n  if (isLoading || favoriteCars.length === 0) {\n    return (\n      <Section>\n        {isLoading ? (\n          <Spinner />\n        ) : (\n          <p>Your favorite cars list is empty. Start browsing and add cars to your favorites.</p>\n        )}\n        {!isLoading && <StyledLink to=\"/catalog\">Back to Catalog</StyledLink>}\n      </Section>\n    );\n  }\n\n  return (\n    <Section>\n      <CatalogUl>\n        {favoriteCars.map((car, index) => (\n          <CatalogItem key={index} carCard={car} removeFromFavorites={removeFromFavorites} />\n        ))}\n      </CatalogUl>\n      {!isLoading && <StyledLink to=\"/catalog\">Back to Catalog</StyledLink>}\n    </Section>\n  );\n};\n\nexport default Favorites;\n","import Favorites from \"../components/Favorites\";\n\nexport default function FavoritesPage() {\n  return <Favorites />;\n}\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["Section","styled","CatalogUl","StyledLink","NavLink","useState","favoriteCars","setFavoriteCars","isLoading","setIsLoading","updateFavoriteCars","favorites","JSON","parse","localStorage","getItem","useEffect","removeFromFavorites","car","updatedFavorites","filter","fav","id","setItem","stringify","console","log","length","Spinner","to","map","index","CatalogItem","carCard","FavoritesPage","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}